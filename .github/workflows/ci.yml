name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: ['k8s-analyzer', 'k8s-reporter']
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install hatch
      run: |
        python -m pip install --upgrade pip
        pip install hatch

    - name: Install dependencies
      run: |
        cd ${{ matrix.directory }}
        hatch env create

    - name: Run tests with coverage
      run: |
        cd ${{ matrix.directory }}
        hatch run test:pytest --junitxml=test-results.xml --cov-report=xml

    - name: Generate SBOM
      run: |
        cd ${{ matrix.directory }}
        pip install cyclonedx-bom
        cyclonedx-bom -o sbom.json

    - name: Build wheel and sdist
      run: |
        cd ${{ matrix.directory }}
        hatch build

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.directory }}-py${{ matrix.python-version }}
        path: ${{ matrix.directory }}/test-results.xml

    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.directory }}-py${{ matrix.python-version }}
        path: ${{ matrix.directory }}/coverage.xml

    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ matrix.directory }}-py${{ matrix.python-version }}
        path: ${{ matrix.directory }}/sbom.json

    - name: Upload built packages
      uses: actions/upload-artifact@v4
      with:
        name: packages-${{ matrix.directory }}-py${{ matrix.python-version }}
        path: ${{ matrix.directory }}/dist/*

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        directory: ['k8s-analyzer', 'k8s-reporter']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install hatch
      run: |
        python -m pip install --upgrade pip
        pip install hatch

    - name: Build packages
      run: |
        cd ${{ matrix.directory }}
        hatch build

    - name: Publish to PyPI
      env:
        HATCH_INDEX_USER: ${{ secrets.PYPI_USERNAME }}
        HATCH_INDEX_AUTH: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd ${{ matrix.directory }}
        hatch publish

